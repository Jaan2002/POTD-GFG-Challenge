Problem Statement:https://www.geeksforgeeks.org/problems/array-of-alternate-ve-and-ve-nos1401/1
Code:
//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
// User function template for C++
class Solution {  public:
//time complexity :O(2N) =~ O(N)
//space complexity:O(N)
    vector<int> rearrange(vector<int> &arr) {
       
       vector<int>pos,neg;
       int n= arr.size();
       for(int i=0;i<n;i++){
           if(arr[i]>=0){
               pos.push_back(arr[i]);
           }else{
               neg.push_back(arr[i]);
           }
       }
       //if pos nos are more
       if(pos.size() > neg.size()){
           
           //adding pos == neg[] only
           for(int i=0;i<neg.size();i++){
               arr[2*i]=pos[i]; //even position
               arr[2*i + 1]=neg[i];// odd position
           }
           //add leftover nos
           int index = neg.size()*2;
           for(int i= neg.size();i<pos.size();i++){
               arr[index] = pos[i];
               index++;
           }
       }else{    //if negs are more
           for(int i=0;i<pos.size();i++){
               arr[2*i]=pos[i]; //even position
               arr[2*i + 1]=neg[i];// odd position
           }
           
           int index = pos.size()* 2;
           for(int i= pos.size();i<neg.size();i++){
               arr[index] = neg[i];
               index++;
           }
       }
       
       return arr;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        int num;

        getline(cin, input);
        stringstream s2(input);
        while (s2 >> num) {
            arr.push_back(num);
        }
        Solution ob;
        ob.rearrange(arr);
        for (int i = 0; i < arr.size(); i++) {
            cout << arr[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
//time complexity :O(2N) =~ O(N)
//space complexity:O(N)
